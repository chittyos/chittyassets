name: Notion Command Center Sync

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'

jobs:
  sync:
    name: Sync Distributed AI Data to Notion Command Center
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comprehensive sync

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --production=false
          npm install @notionhq/client dotenv

      - name: Sync to Notion Command Center
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHITTY_REGISTRY_API_KEY: ${{ secrets.CHITTY_REGISTRY_API_KEY }}
        run: |
          node scripts/notion-sync.js

      - name: Update sync status
        if: always()
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_STATUS_PAGE_ID: ${{ secrets.NOTION_STATUS_PAGE_ID }}
        run: |
          node scripts/update-sync-status.js "${{ job.status }}"

      - name: Send notification on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Notion Sync Failed - Run #${context.runNumber}`,
              body: `The Notion Command Center sync has failed.\n\n**Run:** #${context.runNumber}\n**Commit:** ${context.sha}\n**Triggered by:** ${context.actor}\n\n[View workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`,
              labels: ['bug', 'notion-sync']
            });